<?xml version="1.0" encoding="utf-8" ?>
<!--
  * Copyright (c) 2008, 2010 Empolis GmbH and brox IT Solutions GmbH.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
  * http://www.eclipse.org/legal/epl-v10.html
  *
  * Contributors:
  * Daniel Stucky (Empolis GmbH) - initial design
  * Igor Novakovic (Empolis GmbH) - added the invocation of SolrPipelet
-->
<process name="SolrAddPipeline" targetNamespace="http://www.eclipse.org/smila/processor"
  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:proc="http://www.eclipse.org/smila/processor" xmlns:rec="http://www.eclipse.org/smila/record" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable">

    <import location="processor.wsdl" namespace="http://www.eclipse.org/smila/processor"
    importType="http://schemas.xmlsoap.org/wsdl/" />

  <partnerLinks>
    <partnerLink name="Pipeline" partnerLinkType="proc:ProcessorPartnerLinkType" myRole="service" />
  </partnerLinks>

  <extensions>
    <extension namespace="http://www.eclipse.org/smila/processor" mustUnderstand="no" />
  </extensions>

  <variables>
    <variable name="request" messageType="proc:ProcessorMessage" />
  </variables>

    <sequence>
    <receive name="start" partnerLink="Pipeline" portType="proc:ProcessorPortType"
      operation="process" variable="request" createInstance="yes" />
	
        <bpel:flow name="Flow">
            <bpel:sequence name="ExperimentC">
                   
                <bpel:scope name="Scope" isolated="no">
                    <bpel:sequence>
                    
                        <bpel:assign validate="yes" name="AssignC">
                            <bpel:copy>
                                <bpel:from part="id" variable="request"></bpel:from>
                                <bpel:to part="id" variable="recordsC"></bpel:to>
                            </bpel:copy>
                            <bpel:copy>
                                <bpel:from part="records" variable="request"></bpel:from>
                                <bpel:to part="records" variable="recordsC"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                        
                        <extensionActivity>
                        	<proc:invokePipelet name="invokeEnrichRecordsExperimentCPipelet">
		        				<proc:pipelet class="it.polimi.mdir.text.EnrichRecordsExperimentCPipelet" />
		        				<proc:variables input="recordsC" />     
		    				</proc:invokePipelet>		
                        </extensionActivity>
                        
                        <extensionActivity>
                			<proc:invokePipelet name="invokePayloadAdder">
		        				<proc:pipelet class="it.polimi.mdir.text.PayloadAdderPipelet" />
								<proc:variables input="recordsC" />     
		    				</proc:invokePipelet>
                		</extensionActivity>
                		
                        <extensionActivity>
                        	<proc:invokePipelet name="invokeSolrIndexerPipelet_C">
                    			<proc:pipelet class="it.polimi.mdir.solr.SolrIndexerPipelet" />
            					<proc:variables input="recordsC" />
            					<proc:configuration>
              						<rec:Val key="executionMode">ADD</rec:Val>
              						<rec:Val key="commitWithin" type="long">10000</rec:Val>
              						<rec:Val key="coreName">text_experiment_C</rec:Val>
			  						<rec:Seq key="smilaFields">
			    						<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>		    
										<rec:Val>conceptType</rec:Val>
										<rec:Val>classId</rec:Val>
										<rec:Val>className</rec:Val>
										<rec:Val>attributeNames</rec:Val>
			  						</rec:Seq>
			  						<rec:Seq key="solrFields">
			    						<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>
										<rec:Val>conceptType</rec:Val>			
										<rec:Val>classId</rec:Val>
										<rec:Val>className</rec:Val>
										<rec:Val>attributeNames</rec:Val>
			  						</rec:Seq>
            					</proc:configuration>
                    		</proc:invokePipelet>
                        </extensionActivity>
                    </bpel:sequence>
                    
                    <bpel:variables>
                        <bpel:variable name="recordsC" messageType="proc:ProcessorMessage"></bpel:variable>
                    </bpel:variables>
                </bpel:scope>
            </bpel:sequence>
            
            
            <bpel:sequence name="ExperimentA">

                <bpel:scope name="Scope1">
                    <bpel:sequence>
                    
                        <bpel:assign validate="yes" name="AssignA">
                            <bpel:copy>
                                <bpel:from part="id" variable="request"></bpel:from>
                                <bpel:to part="id" variable="recordsA"></bpel:to>
                            </bpel:copy>
                            <bpel:copy>
                                <bpel:from part="records" variable="request"></bpel:from>
                                <bpel:to part="records" variable="recordsA"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                        
                        <extensionActivity>
		    				<proc:invokePipelet name="invokeEnrichRecordsExperimentAPipelet">
		        				<proc:pipelet class="it.polimi.mdir.text.EnrichRecordsExperimentAPipelet" />
		        				<proc:variables input="recordsA" />     
		    				</proc:invokePipelet>
						</extensionActivity>
						
                        <extensionActivity>
	                        <proc:invokePipelet name="invokeSolrIndexerPipelet_A">
            					<proc:pipelet class="it.polimi.mdir.solr.SolrIndexerPipelet" />
            					<proc:variables input="recordsA" />
            					<proc:configuration>
	              					<rec:Val key="executionMode">ADD</rec:Val>
              						<rec:Val key="commitWithin" type="long">10000</rec:Val>
              						<rec:Val key="coreName">text_experiment_A</rec:Val>
			  						<rec:Seq key="smilaFields">
				    					<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>		    
										<rec:Val>content</rec:Val>	
			  						</rec:Seq>
			  						<rec:Seq key="solrFields">
				    					<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>
										<rec:Val>content</rec:Val>				
			  						</rec:Seq>
            					</proc:configuration>
          					</proc:invokePipelet>
                        </extensionActivity>
                    </bpel:sequence>
                    
                    <bpel:variables>
                        <bpel:variable name="recordsA" messageType="proc:ProcessorMessage"></bpel:variable>
                    </bpel:variables>
                </bpel:scope>
            </bpel:sequence>
            
        	<bpel:sequence name="ExperimentB">

                <bpel:scope name="Scope2">
                    <bpel:sequence>
                    
                        <bpel:assign validate="yes" name="AssignB">
                            <bpel:copy>
                                <bpel:from part="id" variable="request"></bpel:from>
                                <bpel:to part="id" variable="recordsB"></bpel:to>
                            </bpel:copy>
                            <bpel:copy>
                                <bpel:from part="records" variable="request"></bpel:from>
                                <bpel:to part="records" variable="recordsB"></bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                        
                        <extensionActivity>
							<proc:invokePipelet name="invokeEnrichRecordsExperimentBPipelet">
								<proc:pipelet class="it.polimi.mdir.text.EnrichRecordsExperimentBPipelet" />
								<proc:variables input="recordsB" />     
							</proc:invokePipelet>		
						</extensionActivity>
						
                        <extensionActivity>
                        	<proc:invokePipelet name="invokeSolrIndexerPipelet_B">
								<proc:pipelet class="it.polimi.mdir.solr.SolrIndexerPipelet" />
								<proc:variables input="recordsB" />
								<proc:configuration>
									<rec:Val key="executionMode">ADD</rec:Val>
									<rec:Val key="commitWithin" type="long">10000</rec:Val>
									<rec:Val key="coreName">text_experiment_B</rec:Val>
									<rec:Seq key="smilaFields">
										<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>		    
										<rec:Val>className</rec:Val>
										<rec:Val>classId</rec:Val>
										<rec:Val>conceptType</rec:Val>
										<rec:Val>attributeNames</rec:Val>		
									</rec:Seq>
									<rec:Seq key="solrFields">
										<rec:Val>projectId</rec:Val>
										<rec:Val>projectName</rec:Val>
										<rec:Val>className</rec:Val>
										<rec:Val>classId</rec:Val>
										<rec:Val>conceptType</rec:Val>
										<rec:Val>attributeNames</rec:Val>					
									</rec:Seq>
								</proc:configuration>
							</proc:invokePipelet>
                        </extensionActivity>
                    </bpel:sequence>
                    
                    <bpel:variables>
                        <bpel:variable name="recordsB" messageType="proc:ProcessorMessage"></bpel:variable>
                    </bpel:variables>
                </bpel:scope>
            </bpel:sequence>
            
		</bpel:flow>
 
<!--

SOLR-ANALYZER-PIPELET

		<extensionActivity>
          <proc:invokePipelet name="invokeSolrAnalyzerPipelet">
            <proc:pipelet class="it.polimi.mdir.solr.SolrAnalyzerPipelet" />
            <proc:variables input="request" />
            <proc:configuration>
			  <rec:Val key="writerType">xml</rec:Val>
			  <rec:Val key="indent">true</rec:Val>
              <rec:Val key="coreName">test_core</rec:Val>
			  <rec:Seq key="smilaFields">
			    <rec:Val>projectId</rec:Val>
				<rec:Val>Content</rec:Val>
			  </rec:Seq>
			  <rec:Seq key="solrAnalysisTypes">
			    <rec:Val>projectId</rec:Val>
				<rec:Val>text_A</rec:Val>
			  </rec:Seq>
            </proc:configuration>
          </proc:invokePipelet>
        </extensionActivity>
-->

        <reply name="end" partnerLink="Pipeline" portType="proc:ProcessorPortType" operation="process" variable="request" />
        <exit />
    </sequence>
</process>
