<?xml version="1.0" encoding="utf-8"?><!--/*********************************************************************************************************************** * Copyright (c) 2008 empolis GmbH and brox IT Solutions GmbH. All rights reserved. This program and the accompanying * materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, * and is available at http://www.eclipse.org/legal/epl-v10.html * * Contributors: Georg Schmidt (brox IT Solutions GmbH) - initial creator **********************************************************************************************************************/--><XMLTreeViewConfig xmlns="http://projects.brox.de/XMLTreeView/Config.xsd" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ss="http://www.anyfinder.de/Search" xsi:schemaLocation="http://projects.brox.de/XMLTreeView/Config.xsd ../xml/Config.xsd">  <CodeGeneration />  <Icons>    <Icon iconId="w1" href="resx://XMLTreeView.IconsCollection.dll/Icons/w1" />  </Icons>  <ExternalItems>    <ExternalItem format="org.eclipse.smila.search.rapiddeployer.controls.datadictionarytreeview.DataDictionaryTreeNode">      <Types>        <!-- D&D index node to root -->        <Type type="Query">          <PropertyValue property="MaxHits">            <Constant value="50" />          </PropertyValue>          <PropertyValue property="MinSimilarity">            <Constant value="0" />          </PropertyValue>          <PropertyValue property="ShowHitDistribution">            <Constant value="true" />          </PropertyValue>          <PropertyMapping source="Text" target="IndexName" />          <TestBy_PropertyEquals property="NodeType" value="Index" />        </Type>        <!-- D&D text node to root -->        <Type type="Query">          <PropertyValue property="MaxHits">            <Constant value="50" />          </PropertyValue>          <PropertyValue property="MinSimilarity">            <Constant value="0" />          </PropertyValue>          <PropertyValue property="ShowHitDistribution">            <Constant value="true" />          </PropertyValue>          <PropertyMapping source="Text" target="IndexName" />          <TestBy_PropertyEquals property="FieldType" value="Text" />          <AsChild type="Text" parent="Parent.Parent">            <PropertyMapping source="FieldNo" target="FieldNo" />            <PropertyMapping source="FieldName" target="FieldName" />          </AsChild>        </Type>        <!-- D&D number node to root -->        <Type type="Query">          <PropertyValue property="MaxHits">            <Constant value="50" />          </PropertyValue>          <PropertyValue property="MinSimilarity">            <Constant value="0" />          </PropertyValue>          <PropertyValue property="ShowHitDistribution">            <Constant value="true" />          </PropertyValue>          <PropertyMapping source="Text" target="IndexName" />          <TestBy_PropertyEquals property="FieldType" value="Number" />          <AsChild type="Number" parent="Parent.Parent">            <PropertyMapping source="FieldNo" target="FieldNo" />            <PropertyMapping source="FieldName" target="FieldName" />          </AsChild>        </Type>        <!-- D&D date node to root -->        <Type type="Query">          <PropertyValue property="MaxHits">            <Constant value="50" />          </PropertyValue>          <PropertyValue property="MinSimilarity">            <Constant value="0" />          </PropertyValue>          <PropertyValue property="ShowHitDistribution">            <Constant value="true" />          </PropertyValue>          <PropertyMapping source="Text" target="IndexName" />          <TestBy_PropertyEquals property="FieldType" value="Date" />          <AsChild type="Date" parent="Parent.Parent">            <PropertyMapping source="FieldNo" target="FieldNo" />            <PropertyMapping source="FieldName" target="FieldName" />          </AsChild>        </Type>        <!-- D&D text node to query -->        <Type type="Text">          <PropertyMapping source="FieldNo" target="FieldNo" />          <PropertyMapping source="FieldName" target="FieldName" />          <TestBy_PropertyEquals property="FieldType" value="Text" />        </Type>        <!-- D&D date node to query -->        <Type type="Date">          <PropertyMapping source="FieldNo" target="FieldNo" />          <PropertyMapping source="FieldName" target="FieldName" />          <TestBy_PropertyEquals property="FieldType" value="Date" />        </Type>        <!-- D&D number node to query -->        <Type type="Number">          <PropertyMapping source="FieldNo" target="FieldNo" />          <PropertyMapping source="FieldName" target="FieldName" />          <TestBy_PropertyEquals property="FieldType" value="Number" />        </Type>      </Types>    </ExternalItem>  </ExternalItems>  <Macros />  <Tuples />  <SchemaRedefinition schemaLocation="http://www.anyfinder.de/Search ../xml/AnyFinderSearch.xsd">    <!-- Schema defenition -->    <SchemaDef>      <RootElement select="/xs:schema/xs:element[@name='AnyFinderSearch']" />    </SchemaDef>    <!-- Elements defenition -->    <ElementDef select="//xs:element[@name='AnyFinderSearch']">      <HiddenParent>        <AnyFinderSearch xmlns="http://www.anyfinder.de/Search" />      </HiddenParent>    </ElementDef>    <ElementDef select="//xs:element[@name='Query']">      <AsNode>        <NodeDisplay>          <Label IsLinkedProperty="true" format="IndexName" />        </NodeDisplay>        <Property attributeName="IndexName">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="MaxHits">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="MinSimilarity">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="ResultName">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="ShowHitDistribution">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="StartHits">          <Category format="Index Nodes">          </Category>        </Property>        <Property attributeName="TemplateSelectorName">          <Category format="Index Nodes">          </Category>        </Property>      </AsNode>    </ElementDef>    <ComplexTypeDef select="//xs:complexType[@name='FTText']" nodeTypeName="Text">      <MetaProperties>        <Property name="ss:FieldName" merge="true">          <Category format="Field Nodes">          </Category>        </Property>      </MetaProperties>      <AsNode>        <NodeDisplay>          <Label IsLinkedProperty="true" format="FieldName" />        </NodeDisplay>        <Property attributeName="Constraint">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldNo" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldTemplate" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Weight" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Text" merge="true">          <Category format="TextField Nodes">          </Category>        </Property>        <Property attributeName="ParameterDescriptor" hide="true" />      </AsNode>    </ComplexTypeDef>    <ComplexTypeDef select="//xs:complexType[@name='FTDate']" nodeTypeName="Date">      <CustomValidator type="BROX.Windows.Forms.XMLTreeView.Validators.EvalValidator">        <ConstructorParameter type="System.String" description="Excluded parameters from normal validation"/>        <ConstructorParameter type="System.String"  description="Evaluated Expression">          <Value><![CDATA[LessOrEqual("Minimum", "Maximum")]]></Value>        </ConstructorParameter>      </CustomValidator>      <MetaProperties>        <Property name="ss:FieldName" merge="true">          <Category format="Field Nodes">          </Category>        </Property>      </MetaProperties>      <AsNode>        <NodeDisplay>          <Label IsLinkedProperty="true" format="FieldName" />        </NodeDisplay>        <Property attributeName="Constraint">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldNo" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldTemplate" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Weight" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Minimum" merge="true">          <Category format="DateField Nodes">          </Category>        </Property>        <Property attributeName="Maximum" merge="true">          <Category format="DateField Nodes">          </Category>        </Property>        <Property attributeName="ParameterDescriptor" hide="true" />      </AsNode>    </ComplexTypeDef>    <ComplexTypeDef select="//xs:complexType[@name='FTNumber']" nodeTypeName="Number">      <CustomValidator type="BROX.Windows.Forms.XMLTreeView.Validators.EvalValidator">        <ConstructorParameter type="System.String" description="Excluded parameters from normal validation"/>        <ConstructorParameter type="System.String"  description="Evaluated Expression">          <Value><![CDATA[LessOrEqual("Minimum", "Maximum")]]></Value>        </ConstructorParameter>      </CustomValidator>      <MetaProperties>        <Property name="ss:FieldName" merge="true">          <Category format="Field Nodes">          </Category>        </Property>      </MetaProperties>      <AsNode>        <NodeDisplay>          <Label IsLinkedProperty="true" format="FieldName" />        </NodeDisplay>        <Property attributeName="Constraint">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldNo" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="FieldTemplate" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Weight" merge="true">          <Category format="Field Nodes">          </Category>        </Property>        <Property attributeName="Minimum" merge="true">          <Category format="NumberField Nodes">          </Category>        </Property>        <Property attributeName="Maximum" merge="true">          <Category format="NumberField Nodes">          </Category>        </Property>        <Property attributeName="ParameterDescriptor" hide="true" />      </AsNode>    </ComplexTypeDef>    <ElementDef select="//xs:complexType[@name='FieldType']/xs:sequence/xs:element[@ref='po:NodeTransformer']">      <AsProperty UITypeEditor="AnyFinder.Tools.UIEditors.NodeTransformerEditor" SerializerDeserializer="org.eclipse.smila.search.rapiddeployer.serializers.NodeTransformerSerializerDeserializer">        <Category format="Field Nodes">        </Category>      </AsProperty>    </ElementDef>    <ElementDef select="//xs:complexType[@name='FieldType']/xs:sequence/xs:element[@ref='po:Transformer']">      <AsProperty UITypeEditor="AnyFinder.Tools.UIEditors.TransformerEditor" SerializerDeserializer="org.eclipse.smila.search.rapiddeployer.serializers.TransformerSerializerDeserializer">        <Category format="Field Nodes">        </Category>      </AsProperty>    </ElementDef>    <!-- Parameters defenition -->    <ElementDef select="//xs:schema[@targetNamespace='http://www.anyfinder.de/Search/TextField']/xs:element[@name='Parameter']" nodeTypeName="TextParameter">      <AsNode>        <Property attributeName="Operator">          <Category format="Parameter">          </Category>        </Property>        <Property attributeName="Tolerance">          <Category format="Parameter">          </Category>        </Property>        <Property attributeName="CodecClass" hide="true">        </Property>      </AsNode>    </ElementDef>    <ElementDef select="//xs:schema[@targetNamespace='http://www.anyfinder.de/Search/DateField']/xs:element[@name='Parameter']" nodeTypeName="DateParameter">      <AsNode>        <Property attributeName="CodecClass" hide="true">        </Property>      </AsNode>    </ElementDef>    <ElementDef select="//xs:schema[@targetNamespace='http://www.anyfinder.de/Search/NumberField']/xs:element[@name='Parameter']" nodeTypeName="NumberParameter">      <AsNode>        <Property attributeName="CodecClass" hide="true">        </Property>      </AsNode>    </ElementDef>    <!-- common configuration for both simple and advanced search -->    <ComplexTypeDef select="//xs:complexType[@name='Float']" nodeTypeName="Float_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='FloatList']" nodeTypeName="FloatList_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='Date']" nodeTypeName="Date_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='DateList']" nodeTypeName="DateList_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='Boolean']" nodeTypeName="Boolean_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='String']" nodeTypeName="String_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='StringList']" nodeTypeName="StringList_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='Integer']" nodeTypeName="Integer_Parameter" />    <ComplexTypeDef select="//xs:complexType[@name='IntegerList']" nodeTypeName="IntegerList_Parameter" />    <ElementDef select="/xs:schema/xs:complexType[@name='Float']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='FloatList']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='Boolean']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='String']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='StringList']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='Integer']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='IntegerList']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='Date']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <ElementDef select="/xs:schema/xs:complexType[@name='DateList']//xs:element[@name='Value']">      <AsProperty />    </ElementDef>    <!-- common configuration for both simple and advanced search -->  </SchemaRedefinition></XMLTreeViewConfig>